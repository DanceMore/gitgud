name: Build for Windows x86_64

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-msvc

    - name: Build for Windows x86-64
      run: |
        cargo build --release --target x86_64-pc-windows-msvc
        cp target/x86_64-pc-windows-msvc/release/rust-gitaudit.exe ./rust-gitaudit-windows-x86_64.exe

    - name: Set release tag
      id: set_tag
      run: |
        tag=$(git rev-parse --short=8 ${{ github.sha }})
        echo "::set-output name=tag::${tag}"

    - name: Get release ID
      id: get_release_id
      run: echo "::set-output name=id::$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.set_tag.outputs.tag }} | jq -r '.id')"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: Binaries
        path: |
          rust-gitaudit-windows-x86_64.exe

    - name: Attach binaries to release
      id: attach_artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release_id.outputs.id }}/assets?name=rust-gitaudit-windows-x86_64.exe
        asset_path: rust-gitaudit-windows-x86_64.exe
        asset_name: rust-gitaudit-windows-x86_64.exe
