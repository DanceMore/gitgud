name: Build for Linux x86_64 / amd64

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Build for Linux x86-64
      run: |
        rustup target add x86_64-unknown-linux-musl
        cargo build --release --target x86_64-unknown-linux-musl
        cp target/x86_64-unknown-linux-musl/release/rust-gitaudit ./rust-gitaudit-linux-x86_64

    - name: Set release tag
      id: set_tag
      run: echo "::set-output name=tag::$(date +'%Y-%m-%d-%H-%M-%S')-${{ github.sha }}"

    - name: Get Release ID
      id: get_release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        owner: "${{ github.repository_owner }}"
        repo: "${{ github.event.repository.name }}"
        tag_name: ${{ steps.set_tag.outputs.tag }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.set_tag.outputs.tag }}
        release_name: ${{ steps.set_tag.outputs.tag }}
        body: |
          This is an example release.
        draft: false
        prerelease: false

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: Binaries
        path: |
          rust-gitaudit-linux-x86_64

    - name: Attach binaries to release
      id: attach_artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: rust-gitaudit-linux-x86_64
        asset_name: rust-gitaudit-linux-x86_64
        asset_content_type: application/octet-stream
